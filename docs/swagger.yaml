basePath: /
definitions:
  protocol.CallbackResponse:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  protocol.CurUser:
    properties:
      avatar:
        type: string
      createdAt:
        type: string
      email:
        type: string
      lastLogin:
        type: string
      name:
        type: string
      permission:
        type: string
      userID:
        type: integer
    type: object
  protocol.GetCurUserInfoResponse:
    properties:
      user:
        $ref: '#/definitions/protocol.CurUser'
    type: object
  protocol.GetUserInfoResponse:
    properties:
      user:
        $ref: '#/definitions/protocol.User'
    type: object
  protocol.HTTPResponse:
    properties:
      data: {}
      error:
        type: string
    type: object
  protocol.LoginResponse:
    properties:
      redirectURL:
        type: string
    type: object
  protocol.PingResponse:
    properties:
      status:
        type: string
    type: object
  protocol.RefreshTokenBody:
    properties:
      refreshToken:
        type: string
    required:
    - refreshToken
    type: object
  protocol.RefreshTokenResponse:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  protocol.UpdateUserBody:
    properties:
      userName:
        type: string
    required:
    - userName
    type: object
  protocol.UpdateUserInfoResponse:
    type: object
  protocol.User:
    properties:
      avatar:
        type: string
      createdAt:
        type: string
      email:
        type: string
      lastLogin:
        type: string
      name:
        type: string
      userID:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Go Backend Tmpl
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Go Backend Tmpl
  version: "1.0"
paths:
  /:
    get:
      consumes:
      - application/json
      description: 健康检查
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/protocol.HTTPResponse'
            - properties:
                data:
                  $ref: '#/definitions/protocol.PingResponse'
                error:
                  type: object
              type: object
      summary: 健康检查
      tags:
      - ping
  /v1/oauth2/{provider}/callback:
    get:
      consumes:
      - application/json
      description: OAuth2回调请求,验证code和state
      parameters:
      - description: 授权码
        in: query
        name: code
        required: true
        type: string
      - description: 状态码
        in: query
        name: state
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/protocol.HTTPResponse'
            - properties:
                data:
                  $ref: '#/definitions/protocol.CallbackResponse'
                error:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/protocol.HTTPResponse'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/protocol.HTTPResponse'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/protocol.HTTPResponse'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/protocol.HTTPResponse'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      summary: OAuth2回调
      tags:
      - oauth2
  /v1/oauth2/{provider}/login:
    get:
      consumes:
      - application/json
      description: OAuth2登录请求,返回重定向URL
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/protocol.HTTPResponse'
            - properties:
                data:
                  $ref: '#/definitions/protocol.LoginResponse'
                error:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/protocol.HTTPResponse'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/protocol.HTTPResponse'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/protocol.HTTPResponse'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/protocol.HTTPResponse'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      summary: OAuth2登录
      tags:
      - oauth2
  /v1/token/refresh:
    post:
      consumes:
      - application/json
      description: 刷新令牌
      parameters:
      - description: 刷新令牌请求体
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/protocol.RefreshTokenBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/protocol.HTTPResponse'
            - properties:
                data:
                  $ref: '#/definitions/protocol.RefreshTokenResponse'
                error:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/protocol.HTTPResponse'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 刷新令牌
      tags:
      - token
  /v1/user:
    patch:
      consumes:
      - application/json
      description: 更新用户信息
      parameters:
      - description: 更新用户信息请求
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/protocol.UpdateUserBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/protocol.HTTPResponse'
            - properties:
                data:
                  $ref: '#/definitions/protocol.UpdateUserInfoResponse'
                error:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/protocol.HTTPResponse'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/protocol.HTTPResponse'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/protocol.HTTPResponse'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/protocol.HTTPResponse'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 更新用户信息
      tags:
      - user
  /v1/user/{userID}:
    get:
      consumes:
      - application/json
      description: 获取用户信息
      parameters:
      - in: path
        name: userID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/protocol.HTTPResponse'
            - properties:
                data:
                  $ref: '#/definitions/protocol.GetUserInfoResponse'
                error:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/protocol.HTTPResponse'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/protocol.HTTPResponse'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/protocol.HTTPResponse'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/protocol.HTTPResponse'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取用户信息
      tags:
      - user
  /v1/user/current:
    get:
      consumes:
      - application/json
      description: 获取当前用户信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/protocol.HTTPResponse'
            - properties:
                data:
                  $ref: '#/definitions/protocol.GetCurUserInfoResponse'
                error:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/protocol.HTTPResponse'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - $ref: '#/definitions/protocol.HTTPResponse'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "403":
          description: Forbidden
          schema:
            allOf:
            - $ref: '#/definitions/protocol.HTTPResponse'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/protocol.HTTPResponse'
            - properties:
                data:
                  type: object
                error:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取当前用户信息
      tags:
      - user
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
